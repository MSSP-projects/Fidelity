#     if(is.element(timeline[j], colnames(df))){
#        output[, j] <- df[, match(timeline[j], colnames(df))]
#     }else{
#       output[, j] <- output[, j]
#     }
#   }
#   output <- cbind(NEWID = df[, c("NEWID")], output)
#   return(output)
# }
# ###
# subset(df_actual, NEWID == 283)
# df_actual <- add_time(df_actual, timeline = time_index)
# df_execution <- add_time(df_execution, timeline = time_index)
# df_effective_execution <- add_time(df_effective_execution, timeline = time_index)
library(data.table)
df$year <- year(df$WAREHOUSE_METERING_START_TIME)
df$month <- month(df$WAREHOUSE_METERING_START_TIME)
df$week <- week(df$WAREHOUSE_METERING_START_TIME)
df$day <- yday(df$WAREHOUSE_METERING_START_TIME)
# df$year<- as.character(df$year)
# df$month <- as.character(df$month)
# df$week <- as.character(df$week)
# df$day <-  as.character(df$day)
## creat day unit dataset
df_day <- df %>%
group_by(NEWID,year,day) %>%
summarise(ACTUAL_CREDITS=sum(ACTUAL_CREDITS),EXECUTION_CREDITS=sum(EXECUTION_CREDITS),averageEfficiency=EXECUTION_CREDITS/ACTUAL_CREDITS)
#error <- filter(df_day,averageEfficiency=="Inf")
df_day <- df_day[!(df_day$averageEfficiency=="Inf"),]
# a <- filter(df, df$NEWID=="1" & df$year=="2021" & df$day=="174")
# mean(a$efficiency)
# filter(df_day,df_day$NEWID=="34" & df_day$year=="2019" & df_day$day=="319")
### then we have a dataset, every warehouse's efficiency in one day.
df_week <- df %>%
group_by(NEWID,year,week) %>%
summarise(ACTUAL_CREDITS=sum(ACTUAL_CREDITS),EXECUTION_CREDITS=sum(EXECUTION_CREDITS),averageEfficiency=EXECUTION_CREDITS/ACTUAL_CREDITS)
df_week <- df_week[!(df_week$averageEfficiency=="Inf"),]
View(df_week)
## for weekly data
df_week <- arrange(df_week,year,week)
summary(df_week$averageEfficiency)
# 0.025, 0.5
df_week <- df_week %>%
group_by(year,week) %>%
mutate(flag= case_when(
averageEfficiency <0.025 ~ "A",
averageEfficiency >= 0.025 &averageEfficiency<0.5 ~"B",
averageEfficiency >= 0.5 ~"C"
))
## rolling
a <- df_week
# 0.025, 0.5
df_week <- df_week %>%
group_by(year,week) %>%
mutate(flag= case_when(
averageEfficiency <0.025 ~ "C",
averageEfficiency >= 0.025 &averageEfficiency<0.5 ~"B",
averageEfficiency >= 0.5 ~"A"
))
## rolling
a <- df_week
View(df_week)
range(df_week$week
)
predEffiA <- vector()
## year 2019
for (i in 1:53){
a <- filter(df_week, year=="2019")
predEffiA <- vector()
if (a$week=="i" & a$flag =="A"){return(a$NEWID)}
}
for (j in 1:dim(a)[1]){
if (a$week[j,]=="i" & a$flag =="A"){return(a$NEWID)}
for (j in 1:dim(a)[1]){
if (a$week[j,]=="31" & a$flag =="A"){return(a$NEWID)}
for (j in 1:dim(a)[1]){
if (a$week[j,]=="31" & a$flag =="A"){return(a$NEWID)}
}
dim(a)[1]
## rolling
a <- df_week
a <- filter(df_week, year=="2019")
dim(a)
## year 2019
dim(a)
## year 2019
dim[a]
View(a)
## year 2019
dim(a)
for (j in 1:dim(a)[1]){
if (a$week[j,]=="31" & a$flag =="A"){return(a$NEWID)}
}
## year 2019
dim(a)[1]
## year 2019
a$week[1]
for (j in 1:dim(a)[1]){
if (a$week[j]=="31" & a$flag =="A"){return(a$NEWID)}
}
for (j in 1:dim(a)[1]){
if (a$week[j]=="31" & a$flag[j] =="A"){return(a$NEWID)}
}
for (j in 1:dim(a)[1]){
if (a$week[j]=="31" & a$flag[j] =="A"){a$NEWID[j]}
}
if (a$week[j]=="31" & a$flag[j] =="A"){output=a$NEWID[j]}
for (j in 1:dim(a)[1]){
if (a$week[j]=="31" & a$flag[j] =="A"){output=a$NEWID[j]}
}
i <- 31
for (j in 1:dim(a)[1]){
if (a$week[j]=="i" & a$flag[j] =="A"){
ID[j] <- a$NEWID[j]
m <- i+1
aA <- subset(a,a$week=="m" & a$NEWID=ID)
i <- 31
for (j in 1:dim(a)[1]){
if (a$week[j]=="i" & a$flag[j] =="A"){
ID[j] <- a$NEWID[j]
m <- i+1
aA <- subset(a,a$week=="m" & a$NEWID %in% ID)
predEffiA[i]=mean(aA$averageEffiency)}
}
predEffiA <- rep(NA,53)
i <- 31
for (j in 1:dim(a)[1]){
if (a$week[j]=="i" & a$flag[j] =="A"){
ID[j] <- a$NEWID[j]
m <- i+1
aA <- subset(a,a$week=="m" & a$NEWID %in% ID)
predEffiA[i]=mean(aA$averageEffiency)}
}
predEffiA
ID <- vector()
ID[1] <- a$NEWID[1]
ID <- as.vector()
a$NEWID[1]
ID[1] <- a$NEWID[1]
ID
aA <- subset(a,a$week=="32" & a$NEWID %in% ID)
View(aA)
ID[2] <- a$NEWID[2]
aA <- subset(a,a$week=="32" & a$NEWID %in% ID)
View(aA)
predEffiA[31]=mean(aA$averageEffiency)
predEffiA[31]=mean(aA$averageEffiency)
predEffiA
mean(aA$averageEffiency)
mean(aA$averageEfficiency)
predEffiA[31]=mean(aA$averageEfficiency)
predEffiA
for (i in 1:53){
a <- filter(df_week, year=="2019")
predEffiA <- rep(NA,53)
predEffiB <- rep(NA,53)
predEffiC <- rep(NA,53)
# i <- 31
for (j in 1:dim(a)[1]){
if (a$week[j]=="i" & a$flag[j] =="A"){
ID <- vector()
ID[j] <- a$NEWID[j]
m <- i+1
aA <- subset(a,a$week=="m" & a$NEWID %in% ID)
predEffiA[i]=mean(aA$averageEffiency)}
if (a$week[j]=="i" & a$flag[j] =="B"){
ID <- vector()
ID[j] <- a$NEWID[j]
m <- i+1
aA <- subset(a,a$week=="m" & a$NEWID %in% ID)
predEffiB[i]=mean(aA$averageEffiency)}
if (a$week[j]=="i" & a$flag[j] =="C"){
ID <- vector()
ID[j] <- a$NEWID[j]
m <- i+1
aA <- subset(a,a$week=="m" & a$NEWID %in% ID)
predEffiC[i]=mean(aA$averageEffiency)}
}
}
predEffiA
predEffiB
predEffiC
for (i in 1:53){
a <- filter(df_week, year=="2019")
predEffiA <- rep(NA,53)
predEffiB <- rep(NA,53)
predEffiC <- rep(NA,53)
# i <- 31
for (j in 1:dim(a)[1]){
if (a$week[j]=="i" & a$flag[j] =="A"){
ID <- vector()
ID[j] <- a$NEWID[j]
m <- i+1
aA <- subset(a,a$week=="m" & a$NEWID %in% ID)
predEffiA[i]=mean(aA$averageEffiency)}
#  if (a$week[j]=="i" & a$flag[j] =="B"){
#      ID <- vector()
#      ID[j] <- a$NEWID[j]
#      m <- i+1
#      aA <- subset(a,a$week=="m" & a$NEWID %in% ID)
#      predEffiB[i]=mean(aA$averageEffiency)}
# if (a$week[j]=="i" & a$flag[j] =="C"){
#      ID <- vector()
#      ID[j] <- a$NEWID[j]
#      m <- i+1
#      aA <- subset(a,a$week=="m" & a$NEWID %in% ID)
#      predEffiC[i]=mean(aA$averageEffiency)}
}
}
predEffiA
for (i in 1:53){
a <- filter(df_week, year=="2019")
predEffiA <- rep(NA,53)
predEffiB <- rep(NA,53)
predEffiC <- rep(NA,53)
a1 <- subset(a,a$flag =="A" & a$week=="i")
# ID <- vector()
# ID[j] <- a$NEWID[j]
m <- i+1
aA <- subset(a,a$week=="m" & a$NEWID %in% a1$NEWID)
predEffiA[i]=mean(aA$averageEffiency)}
a1
i <- 31
a1 <- subset(a,a$flag =="A" & a$week=="i")
# ID <- vector()
# ID[j] <- a$NEWID[j]
m <- i+1
aA <- subset(a,a$week=="m" & a$NEWID %in% a1$NEWID)
predEffiA[i]=mean(aA$averageEffiency)
a1
i <- 31
a1 <- subset(a,a$flag =="A" & a$week=="i")
i <- 31
a1 <- filter(a,a$flag =="A" & a$week=="i")
i <- 31
a1 <- filter(a,a$flag =="A" & a$week=i)
i <- 31
a1 <- filter(a,a$flag =="A" & a$week==i)
a1 <- filter(a,a$flag =="A" & a$week=="i")
i <- "31"
a1 <- filter(a,a$flag =="A" & a$week==i)
a1 <- filter(a,a$flag =="A" & a$week==31)
a1 <- filter(a,a$flag =="A" & a$week=="31")
## year 2019
a <- filter(df_week, year=="2019")
View(a)
a1 <- filter(a,a$flag =="A" & a$week=="31")
summary(df_week$averageEfficiency)
a1 <- filter(a,a$flag =="A")
a1 <- filter(a,a$week=="31")
a1 <- filter(a,flag =="A")
a1 <- filter(a,week=="31")
View(a1)
i <- 31
a1 <- filter(a,week=="i")
View(a1)
a1 <- filter(a,week==i)
View(a1)
a1 <- filter(a,flag =="A" & week==i)
View(a1)
ID <- a1$NEWID
ID
i <- 41
a1 <- filter(a,flag =="A" & week==i)
View(a1)
ID <- a1$NEWID
ID
aA <- filter(a,week==m)
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID,]
View(aA1)
mean(aA1$averageEffiency)}
mean(aA1$averageEffiency)
mean(aA1$averageEffiency)
aA1$averageEffiency
aA1$averageEfficiency
mean(aA1$averageEfficiency)
for (i in 31:53){
predEffiA <- rep(NA,53)
predEffiB <- rep(NA,53)
predEffiC <- rep(NA,53)
# i <- 41
a1 <- filter(a,flag =="A" & week==i)
ID <- a1$NEWID
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID,]
predEffiA[i]=mean(aA1$averageEfficiency)
}
predEffiA
aA1
a1
View(a)
View(a1)
View(a1)
for (i in 31:52){
predEffiA <- rep(NA,53)
predEffiB <- rep(NA,53)
predEffiC <- rep(NA,53)
# i <- 41
a1 <- filter(a,flag =="A" & week==i)
ID <- a1$NEWID
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID,]
predEffiA[i]=mean(aA1$averageEfficiency)
}
predEffiA
a <- filter(df_week, year=="2019")
predEffiA <- rep(NA,52)
predEffiB <- rep(NA,52)
predEffiC <- rep(NA,52)
for (i in 31:52){
# i <- 41
a1 <- filter(a,flag =="A" & week==i)
ID <- a1$NEWID
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID,]
predEffiA[i]=mean(aA1$averageEfficiency)
}
predEffiA
View(df_week)
#create data frame with 0 rows and 3 columns
result <- data.frame(matrix(ncol = 5, nrow = 0))
#provide column names
colnames(result) <- c('year', 'week', 'bestgroup averageEfficiency', "midgroup averageEfficiency","worstgroup averageEfficiency")
result
#provide column names
colnames(result) <- c('year', 'week', 'bestAvgEfi', "midAvgEfi","worstAvgEfi")
df2 <- data.frame(year=c(4),
week=c(9),
bestAvgEfi=c(6),
midAvgEfi=c(1),
worstAvgEfi=c(2)
df2
result[nrow(result) + 1,] = c(5, 5, 3,1,2)
result[nrow(result) + 1,] = c(5, 5, 3,1,2)
result
for (y in 2019:2021){
a <- filter(df_week, year==y)
for (i in 31:52){
# i <- 41
a1 <- filter(a,flag =="A" & week==i)
ID <- a1$NEWID
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID,]
result[nrow(result) + 1,] = c(y, i, 3,1,2)
}
}
result
i <- 53
a1 <- filter(a,flag =="A" & week==i)
ID <- a1$NEWID
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID,]
aA1
mean(aA1$averageEfficiency)
for (y in 2019:2021){
a <- filter(df_week, year==y)
for (i in 31:52){
# i <- 53
a1 <- filter(a,flag =="A" & week==i)
ID <- a1$NEWID
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID,]
bestAvgEfi=mean(aA1$averageEfficiency)
result[nrow(result) + 1,] = c(y, i, bestAvgEfi,1,2)
}
}
for (y in 2019:2021){
a <- filter(df_week, year==y)
for (i in 1:52){
# i <- 53
a1 <- filter(a,flag =="A" & week==i)
ID <- a1$NEWID
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID,]
bestAvgEfi=mean(aA1$averageEfficiency)
result[nrow(result) + 1,] = c(y, i, bestAvgEfi,1,2)
}
}
result
View(result)
#create data frame with 0 rows and 3 columns
result <- data.frame(matrix(ncol = 5, nrow = 0))
#provide column names
colnames(result) <- c('year', 'week', 'bestAvgEfi', "midAvgEfi","worstAvgEfi")
for (y in 2019:2021){
a <- filter(df_week, year==y)
for (i in 1:52){
# i <- 53
a1 <- filter(a,flag =="A" & week==i)
ID <- a1$NEWID
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID,]
bestAvgEfi=mean(aA1$averageEfficiency)
result[nrow(result) + 1,] = c(y, i, bestAvgEfi,1,2)
}
}
View(result)
#create data frame with 0 rows and 3 columns
result <- data.frame(matrix(ncol = 5, nrow = 0))
#provide column names
colnames(result) <- c('year', 'week', 'bestAvgEfi', "midAvgEfi","worstAvgEfi")
for (y in 2019:2021){
a <- filter(df_week, year==y)
for (i in 1:52){
# i <- 53
a1 <- filter(a,flag =="A" & week==i)
ID1 <- a1$NEWID
m <- i+1
aA <- filter(a,week==m)
aA1 <- aA[aA$NEWID %in% ID1,]
bestAvgEfi=mean(aA1$averageEfficiency)
a2 <- filter(a,flag =="B" & week==i)
ID2 <- a2$NEWID
aB <- filter(a,week==m)
aB1 <- aB[aB$NEWID %in% ID2,]
midAvgEfi=mean(aB1$averageEfficiency)
a3 <- filter(a,flag =="C" & week==i)
ID3 <- a3$NEWID
aC <- filter(a,week==m)
aC1 <- aC[aC$NEWID %in% ID3,]
worstAvgEfi=mean(aC1$averageEfficiency)
result[nrow(result) + 1,] = c(y, i, bestAvgEfi,midAvgEfi,worstAvgEfi)
}
}
View(result)
result_clean <- result
result_clean$date <- paste(result_clean$year,result_clean$week)
View(result_clean)
result_clean$date <- as.Date(result_clean$date,format="%y/%m")
View(result_clean)
result_clean$date <- paste(result_clean$year,result_clean$week)
result_clean <- result
result_clean$date <- paste(result_clean$year,result_clean$week)
View(result_clean)
result_clean$date <- as.Date(result_clean$date,format="%y %m")
View(result_clean)
View(result)
result_clean <- result
result_clean$date <- paste(result_clean$year,result_clean$week)
View(result_clean)
ggplot(result_clean)+
geom_point()+
geom_line(aes(x=date,y=bestAvgEfi))
View(result_clean)
result_clean <- result[!(result$bestAvgEfi=="NaN"&result$midAvgEfi=="NaN"&result$worstAvgEfi=="NaN"),]
result_clean$date <- paste(result_clean$year,result_clean$week)
ggplot(result_clean)+
#  geom_point()+
geom_line(aes(x=date,y=bestAvgEfi))
test <- result_clean[,c(50,60)]
test <- result_clean[c(50,60),]
ggplot(test)+
#  geom_point()+
geom_line(aes(x=date,y=bestAvgEfi))
ggplot(test)+
geom_point(aes(x=date,y=bestAvgEfi))
test
test <- result_clean[50:60,]
test
ggplot(test)+
geom_point(aes(x=date,y=bestAvgEfi))
ggplot(test)+
geom_point(aes(x=date,y=bestAvgEfi))+
geom_line(aes(x=date,y=bestAvgEfi))
ggplot(test)+
geom_point(aes(x=date,y=bestAvgEfi))
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi))
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi),col="red")
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi),col="grey")
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi))+
geom_point(aes(x=date,y=midAvgEfi))
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi))+
geom_point(aes(x=date,y=midAvgEfi),col="blue")
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi))+
geom_point(aes(x=date,y=midAvgEfi),col="blue")+
geom_point(aes(x=date,y=worstAvgEfi),col="red")+
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi))+
geom_point(aes(x=date,y=midAvgEfi),col="blue")+
geom_point(aes(x=date,y=worstAvgEfi),col="red")
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi))+
geom_point(aes(x=date,y=midAvgEfi),col="blue")+
geom_point(aes(x=date,y=worstAvgEfi),col="red")
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi))+
geom_point(aes(x=date,y=midAvgEfi),col="blue")+
geom_point(aes(x=date,y=worstAvgEfi),col="red")+
labs(x="weekly",y="effiency")
ggplot(result_clean)+
geom_point(aes(x=date,y=bestAvgEfi))+
geom_point(aes(x=date,y=midAvgEfi),col="blue")+
geom_point(aes(x=date,y=worstAvgEfi),col="red")+
labs(x="weekly",y="effiency")+
scale_color_manual(name = "weekly efficiency", values = c("bestAvgEfi" = "dark", "midAvgEfi" = "blue","worstAvgEfi" = "red"))
View(df_week)
